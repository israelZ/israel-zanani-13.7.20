{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/dialog-edit/dialog-edit.component.ts","webpack:///src/app/component/dialog-edit/dialog-edit.component.html","webpack:///src/app/component/dialog-new/dialog-new.component.ts","webpack:///src/app/component/dialog-new/dialog-new.component.html","webpack:///src/app/component/dialog-see/dialog-see.component.ts","webpack:///src/app/component/dialog-see/dialog-see.component.html","webpack:///src/app/component/home/home.component.ts","webpack:///src/app/component/home/home.component.html","webpack:///src/app/component/tasks/tasks.component.ts","webpack:///src/app/component/tasks/tasks.component.html","webpack:///src/app/component/user/user.component.ts","webpack:///src/app/component/user/user.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","entryComponents","providers","bootstrap","DialogEditComponent","data","sevice","dialogRef","snapBar","editTaskForm","name","required","mail","email","phone","pattern","maxLength","content","value","valid","console","log","testEdit","id_task","active","editTask","subscribe","res","close","err","open","duration","onSubmit","DialogNewComponent","service","newTaskForm","addTask","DialogSeeComponent","date","word","split","HomeComponent","router","dialog","userForm","password","getFundUser","navigate","addUser","TasksComponent","routr","TASKS","displayedColumnsSm","displayedColumns","paginator","dataSource","getTask","response","forEach","item","push","creattion_date","dataSourceSm","toArray","valueFilter","filter","trim","toLowerCase","afterClosed","task","idTask","remTask","logout","applyFilter","UserComponent","servis","newUserForm","family","mat","MaterialModule","ServiceService","http","user","post","get","newTask","upTask","providedIn","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { TasksComponent } from './component/tasks/tasks.component';\n\nconst routes: Routes = [\n  {path: '',  redirectTo: 'home',pathMatch: 'full'},\n  {path:'home',component:HomeComponent},\n  {path:'task',component:TasksComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'propit';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { TasksComponent } from './component/tasks/tasks.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MaterialModule} from './material/material.module';\nimport { DialogNewComponent } from './component/dialog-new/dialog-new.component';\nimport { DialogEditComponent } from './component/dialog-edit/dialog-edit.component';\nimport { DialogSeeComponent } from './component/dialog-see/dialog-see.component';\nimport { UserComponent } from './component/user/user.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    TasksComponent,\n    DialogNewComponent,\n    DialogEditComponent,\n    DialogSeeComponent,\n    UserComponent\n  ],\n  entryComponents : [\n    DialogNewComponent,\n    DialogEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, inject, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ServiceService } from '../../service.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-dialog-edit',\n  templateUrl: './dialog-edit.component.html',\n  styleUrls: ['./dialog-edit.component.css']\n})\nexport class DialogEditComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private sevice: ServiceService, private dialogRef: MatDialogRef<DialogEditComponent>,\n  private snapBar:MatSnackBar) { }\n\n  // todo valide\n  editTaskForm = new FormGroup({\n    name: new FormControl(this.data.name,[Validators.required]),\n    mail: new FormControl(this.data.mail,[Validators.required,Validators.email]),\n    phone: new FormControl(this.data.phone,[Validators.required, Validators.pattern('^\\\\d*$'),Validators.maxLength(10)]),\n    content: new FormControl(this.data.content,[Validators.required])\n    // id_task: new FormControl(this.data.id_task),\n    // active: new FormControl(this.data.active)\n  });\n\n\n\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    \n\n    if ((this.data.name!=this.editTaskForm.value.name \n      || this.data.mail!=this.editTaskForm.value.mail\n      || this.data.phone!=this.editTaskForm.value.phone\n      || this.data.content!=this.editTaskForm.value.content)\n      && this.editTaskForm.valid) \n    {\n      console.log(this.editTaskForm.valid)\n      let testEdit=this.editTaskForm.value\n      \n      testEdit.id_task=this.data.id_task\n      testEdit.active=this.data.active\n      this.sevice.editTask(testEdit).subscribe(res=>{\n        if (res)\n        this.dialogRef.close(true)\n      }),err=>{console.log('erorr in sql server')}\n    }\n    else\n    this.snapBar.open('One or more of the fields is invalid!','',{duration:2000})\n\n  }\n\n}\n","<h2 mat-mat-dialog-title>Add task</h2>\n<mat-dialog-content class=\"m-1\">\n    <form [formGroup]=\"editTaskForm\" (ngSubmit)=\"onSubmit()\">\n        <div style=\"display: flex; flex-direction: column;\">\n            \n            <div class=\"from-inline\">\n                <i class=\"far fa-user pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Name\n                    </mat-label>\n                    <input matInput formControlName=\"name\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"from-inline\">\n                <i class=\"las la-at pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Email\n                    </mat-label>\n                    <input matInput formControlName=\"mail\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"from-inline\">\n                <i class=\"las la-phone-volume pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Phone\n                    </mat-label>\n                    <input matInput formControlName=\"phone\">\n                </mat-form-field>\n            </div>\n\n            <mat-form-field>\n                <mat-label>\n                    Description\n                </mat-label>\n                <textarea rows=\"6\" matInput placeholder=\"Ex. It makes me feel...\" formControlName=\"content\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <button mat-raised-button color=\"primary\" type=\"submit\">Update</button>\n    </form>\n</mat-dialog-content>","import { Component, OnInit } from '@angular/core';\nimport { ServiceService } from '../../service.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-dialog-new',\n  templateUrl: './dialog-new.component.html',\n  styleUrls: ['./dialog-new.component.css']\n})\nexport class DialogNewComponent implements OnInit {\n\n  constructor(private dialogRef:MatDialogRef<DialogNewComponent>,private service :ServiceService,\n    private snapBar:MatSnackBar) { }\n\n  newTaskForm = new FormGroup({\n    name: new FormControl('',[Validators.required]),\n    mail: new FormControl('',[Validators.required,Validators.email]),\n    phone: new FormControl('',[Validators.required,Validators.maxLength(10)]),\n    content: new FormControl('',[Validators.required])\n  });\n\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    \n    if (this.newTaskForm.valid)\n    {\n       this.service.addTask(this.newTaskForm.value).subscribe(res=>{\n         if (res) \n         this.dialogRef.close(true);\n       \n       })  \n    }\n    else{\n      this.snapBar.open('One or more of the fields is invalid!','',{duration:2000})\n    }\n  }\n}\n","<h2 mat-mat-dialog-title>Add task</h2>\n<mat-dialog-content>\n    <form [formGroup]=\"newTaskForm\"  (ngSubmit)=\"onSubmit()\">\n        <div style=\"display: flex; flex-direction: column;\">\n            \n            <div class=\"from-inline\">\n                <i class=\"far fa-user pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Name\n                    </mat-label>\n                    <input matInput formControlName=\"name\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"from-inline\">\n                <i class=\"las la-at pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Email\n                    </mat-label>\n                    <input matInput formControlName=\"mail\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"from-inline\">\n                <i class=\"las la-phone-volume pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Phone\n                    </mat-label>\n                    <input matInput formControlName=\"phone\">\n                </mat-form-field>\n            </div>\n\n            <mat-form-field>\n                <mat-label>\n                    Description\n                </mat-label>\n                <textarea rows=\"6\" matInput placeholder=\"Ex. It makes me feel...\" formControlName=\"content\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <button mat-raised-button color=\"primary\" type=\"submit\">submit</button>\n    </form>\n\n\n\n</mat-dialog-content>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\n\n@Component({\n  selector: 'app-dialog-see',\n  templateUrl: './dialog-see.component.html',\n  styleUrls: ['./dialog-see.component.css']\n})\nexport class DialogSeeComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,  private dialogRef: MatDialogRef<DialogSeeComponent >) { }\n\n  ngOnInit(): void {\n  }\n\n  parsDate(date){\n    let word = date.split('T')[0].split('-');\n    \n    return `${word[2]}/${word[1]}/${word[0]}`\n \n  }\n\n}\n","<div style=\"max-width: 400px;\">\n\n\n    <h2 mat-dialog-title>\n        Task\n    </h2>\n    <mat-dialog-content>\n        <div class=\"px-4\">\n            <div class=\"pt-3\" style=\"display: flex; justify-content: space-between\">\n                <div>\n                    <i class=\"far fa-user pr-2\" style=\"font-size: medium;\"></i>\n                    {{data.name}}\n                </div>\n                <div>\n                    <i class=\"las la-phone-volume pr-2\" style=\"font-size: medium;\"></i>\n                    0{{data.phone}}\n                </div>\n            </div>\n            <div class=\"pt-3\" style=\"display: flex; justify-content: space-between;\">\n                <div>\n                    <i class=\"lar la-calendar pr-2\" style=\"font-size: medium;\"></i>\n                    {{parsDate(data.data)}}\n                </div>\n                <div>\n                    <i class=\"las la-at pr-2\" style=\"font-size: medium;\"></i>\n                    {{data.mail}}\n                </div>\n\n            </div>\n            <div class=\"pt-5\">\n\n                <h4>Description</h4>\n                {{data.content}}\n            </div>\n\n        </div>\n\n    </mat-dialog-content>\n    <mat-dialog-actions class=\"mt-3 mb-1\">\n        <button mat-dialog-close mat-mini-fab color=\"primary\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n    </mat-dialog-actions>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ServiceService } from '../../service.service';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport {UserComponent} from '../user/user.component'\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  userForm = new FormGroup({\n    password: new FormControl('',[Validators.required]),\n    email: new FormControl('',[Validators.required]),\n  });\n\n  constructor(private service: ServiceService, private router: Router,private dialog: MatDialog,private snapBar:MatSnackBar) { }\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    console.log(this.userForm.value);\n\n    if (this.userForm.valid)\n     {\n       this.service.getFundUser(this.userForm.value).subscribe(res => {\n           // TODO protect this\n           this.router.navigate(['task'])},err => this.snapBar.open('One or more of the fields is invalid','',{duration:2000}))\n    }\n    else\n    this.snapBar.open('Missing fields required','',{duration:2000});\n  }\n\n  addUser(){\n    this.dialog.open(UserComponent)\n  }\n}\n","<div class=\"cont\">\n    <mat-card class=\"login p-4\">\n        <mat-card-title class=\"mb-4\">\n            Log in\n        </mat-card-title>\n        <mat-card-content>\n            <div style=\"display: flex; justify-content: center;\">\n                <i class=\"fas fa-user-circle text-center\" style=\"font-size: xxx-large;\"></i>\n            </div>\n\n            <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n                <div style=\"display: flex; flex-direction: column;\" class=\"px-3\">\n                    <mat-form-field>\n                        <mat-label>\n                            Email\n                        </mat-label>\n                        <input matInput formControlName=\"email\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>\n                            Pssword\n                        </mat-label>\n                        <input matInput formControlName=\"password\">\n                    </mat-form-field>\n                    <button style=\"align-self: center;\" class=\"mt-3\" mat-raised-button color=\"primary\"\n                        style=\"font-size: medium;\" type=\"submit\">\n                        Login <i class=\"pl-1 las la-sign-in-alt\" style=\"font-size: x-large;\"></i></button>\n                </div>\n            </form>\n            \n            <div style=\"display: flex; justify-content: center;\" class=\"mt-3\">\n                <button mat-raised-button color=\"primary\" style=\"font-size: medium;\" (click)=\"addUser()\">\n                    \n                    <i class=\"las la-plus-circle\" style=\"font-size: x-large;\"></i> New User\n                </button>\n            </div>\n\n        </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit,ViewChild, ChangeDetectorRef, QueryList, ViewChildren } from '@angular/core';\nimport { ServiceService } from '../../service.service';\nimport { Observable } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog} from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { DialogNewComponent } from '../dialog-new/dialog-new.component';\nimport { DialogEditComponent } from '../dialog-edit/dialog-edit.component';\nimport { DialogSeeComponent } from '../dialog-see/dialog-see.component';\nimport { Router } from '@angular/router';\n\nexport interface PeriodicElement {\n  name: string;\n  mail: string;\n  phone: number;\n  data: string;\n  content: string;\n  active: string;\n  id_task: string;\n}\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\n\n\n\nexport class TasksComponent implements OnInit {\n\n  TASKS: PeriodicElement[] = [];\n  response: any;\n  displayedColumnsSm: string[] = ['Name', 'Email','Options'];\n  displayedColumns: string[] = ['Name', 'Email', 'Phone', 'Data','Options'];\n  dataSource\n  dataSourceSm\n\n  @ViewChildren(MatPaginator) paginator = new QueryList<MatPaginator>();\n\n  constructor(private service: ServiceService, private dialog: MatDialog, private routr:Router) {}\n\n  ngOnInit(): void {\n    \n    this.dataSource = new MatTableDataSource();\n    this.getTask()\n    \n  }\n\n  getTask() {\n\n    this.service.getTask().subscribe(res => {\n\n      this.response=res\n\n      this.TASKS=[]\n      \n      this.response.forEach(item => {\n\n        this.TASKS.push({\n          name: item.name,\n          mail: item.mail,\n          phone: item.phone,\n          data: item.creattion_date,\n          content: item.content,\n          active: item.active,\n          id_task: item.id_task\n        })\n      })\n      this.dataSource = new MatTableDataSource(this.TASKS)\n      this.dataSourceSm = new MatTableDataSource(this.TASKS)\n      this.dataSource.paginator=this.paginator.toArray()[0]\n      this.dataSourceSm.paginator=this.paginator.toArray()[1]\n      \n    })\n  }\n\n  applyFilter(valueFilter: string) {\n    this.dataSource.filter = valueFilter.trim().toLowerCase()\n  }\n\n\n\n  addTask() {\n\n\n    \n    let dialogRef = this.dialog.open(DialogNewComponent)\n    \n    dialogRef.afterClosed().subscribe(res=>{\n      if (res)\n      this.getTask()\n    })\n    \n  }\n  watching(task) {\n    this.dialog.open(DialogSeeComponent, { data: task })\n  }\n\n  remove(idTask) \n  {\n    this.service.remTask(idTask).subscribe(res=>{\n      if (res)\n      this.getTask()\n    },\n    err=>console.log(err))\n  }\n\n  edit(task) {\n\n  \n    let dialogRef= this.dialog.open(DialogEditComponent, { data: task })\n\n    dialogRef.afterClosed().subscribe(res=>{\n      if (res)\n      this.getTask()\n    })\n  }\n\n  parsDare(date){\n    let word = date.split('T')[0].split('-');\n    \n    return `${word[2]}/${word[1]}/${word[0]}`\n    \n    \n  }\n  logout(){\n    this.service.logout().subscribe(res=>{\n      console.log(res)\n      res ? this.routr.navigate(['home']) : ''\n    })\n  }\n\n}\n\n","<div class=\"bg\">\n<mat-toolbar style=\"justify-content: space-between;\" color=\"primary\">\n  <div class=\"d-none d-sm-block\">\n    <button mat-raised-button (click)=\"addTask()\">\n      <i class=\"las la-plus\" style=\"font-size: medium;\"></i> New Task\n    </button>\n  </div>\n  <div class=\"d-block d-sm-none\">\n    <mat-menu #MatMenu=\"matMenu\">\n      <button mat-menu-item (click)=\"addTask()\">\n        <i class=\"las la-plus\" style=\"font-size: medium;\"></i> New Task\n      </button>\n    </mat-menu>\n    <div >\n      <button mat-raised-button [matMenuTriggerFor]=\"MatMenu\">\n        <i class=\"fas fa-ellipsis-v\" style=\"font-size: medium;\"></i>\n      </button>\n    </div>\n  </div>\n\n  <div>\n    <span class=\"h6\" (click)=\"logout()\" style=\"cursor: pointer;\"> Log out <i class=\"las la-sign-out-alt\" style=\"font-size: x-large;\"></i></span>\n  </div>\n</mat-toolbar>\n\n<div class=\"mt-4 ml-5 form-inline\" >\n  \n  <i class=\"las la-search pr-3\" style=\"font-size: x-large;\"></i>\n  <mat-form-field>\n    <input matInput placeholder=\"Filter\" (keyup)=\"applyFilter($event.target.value)\">\n  </mat-form-field>\n</div>\n\n<div class=\"d-none d-sm-block\">\n  <div class=\"mat-elevation-z8 mx-5\">\n    <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 bg-t text-white\">\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"Name\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"><i class=\"far fa-user pr-2\" style=\"font-size: medium;\"></i> Name\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" class=\"text-white\">{{element.name}} </mat-cell>\n      </ng-container>\n\n      <!-- Email Column -->\n      <ng-container matColumnDef=\"Email\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"> <i class=\"las la-at pr-2\" style=\"font-size: medium;\"></i> Email\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" class=\"text-white\"> {{element.mail}} </mat-cell>\n      </ng-container>\n\n      <!-- Phone Column -->\n      <ng-container matColumnDef=\"Phone\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"><i class=\"las la-phone-volume pr-2\" style=\"font-size: medium;\"></i> Phone\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" class=\"text-white\"> 0{{element.phone}} </mat-cell>\n      </ng-container>\n\n      <!-- Data Column -->\n      <ng-container matColumnDef=\"Data\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"> <i class=\"lar la-calendar pr-2\" style=\"font-size: medium;\"></i> Data\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" class=\"text-white\"> {{parsDare(element.data)}} </mat-cell>\n      </ng-container>\n\n      <!-- Options Column -->\n\n      <ng-container matColumnDef=\"Options\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"> Options </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <span class=\"d-none d-lg-block\">\n            <button (click)=\"edit(element)\" class=\"btn btn-primary mr-2 ml-1\"><i\n                class=\"las la-pen\"></i></button>\n            <button (click)=\"watching(element)\" class=\"btn btn-success\"><i class=\"las la-eye\"></i></button>\n            <button (click)=\"remove(element.id_task)\" class=\"btn btn-danger ml-2\"><i\n                class=\"las la-trash-alt\"></i></button>\n          </span>\n          <span class=\"d-block d-lg-none\">\n\n            <mat-menu #MatMenuModule=\"matMenu\">\n              <div mat-menu-item (click)=\"edit(element)\">\n                <i class=\"las la-pen\"></i> edit\n              </div>\n              <div mat-menu-item (click)=\"watching(element)\">\n                <i class=\"las la-eye\"></i> Watching\n              </div>\n              <div mat-menu-item (click)=\"remove(element.id_task)\">\n                <i class=\"las la-trash-alt\"></i> Remove\n              </div>\n            </mat-menu>\n            <div class=\"p-3\">\n              <button color=\"primary\" mat-mini-fab [matMenuTriggerFor]=\"MatMenuModule\">\n                <i class=\"las la-bars\"></i>\n              </button>\n            </div>\n\n          </span>\n\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n    <mat-paginator class=\"text-white\" style=\"background-color:  rgb(115, 136, 255,0.3);\" [pageSizeOptions]=[2,5,10,20] showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n\n\n<span class=\"d-block d-sm-none\">\n  <div class=\"mat-elevation-z8 mx-3\">\n    <mat-table [dataSource]=\"dataSourceSm\" class=\"mat-elevation-z8 bg-t\">\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"Name\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"><i class=\"far fa-user pr-2\" style=\"font-size: medium;\"></i> Name\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" class=\"text-white\"> {{element.name}} </mat-cell>\n      </ng-container>\n\n      <!-- Email Column -->\n      <ng-container matColumnDef=\"Email\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"> <i class=\"las la-at pr-2\" style=\"font-size: medium;\"></i> Email\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" class=\"text-white\"> {{element.mail}} </mat-cell>\n      </ng-container>\n\n      <!-- Options Column -->\n\n      <ng-container matColumnDef=\"Options\">\n        <mat-header-cell *matHeaderCellDef class=\"ml-5 pl-4\" class=\"text-white\"> Options </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <span class=\"d-block d-lg-none\">\n\n            <mat-menu #MatMenuModule=\"matMenu\">\n              <div mat-menu-item (click)=\"edit(element)\">\n                <i class=\"las la-pen\"></i> edit\n              </div>\n              <div mat-menu-item (click)=\"watching(element)\">\n                <i class=\"las la-eye\"></i> Watching\n              </div>\n              <div mat-menu-item (click)=\"remove(element.id_task)\">\n                <i class=\"las la-trash-alt\"></i> Remove\n              </div>\n            </mat-menu>\n            <div class=\"ml-4 my-2\">\n              <button color=\"primary\" mat-mini-fab [matMenuTriggerFor]=\"MatMenuModule\">\n                <i class=\"las la-bars\"></i>\n              </button>\n            </div>\n\n          </span>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumnsSm\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumnsSm;\"></mat-row>\n    </mat-table>\n    <mat-paginator class=\"text-white\" style=\"background-color:  rgb(115, 136, 255,0.3);\" [pageSizeOptions]=[2,5,10,20] showFirstLastButtons></mat-paginator>\n  </div>\n</span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ServiceService } from '../../service.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private servis:ServiceService,private snapBar:MatSnackBar,private dialogRef:MatDialogRef<UserComponent>) { }\n\n  newUserForm = new FormGroup({\n    name: new FormControl('',[Validators.required]),\n    mail: new FormControl('',[Validators.required,Validators.email]),\n    password: new FormControl('',[Validators.required,Validators.maxLength(6)]),\n    family: new FormControl('',[Validators.required])\n  });\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    if (this.newUserForm.valid)\n    {\n      this.servis.addUser(this.newUserForm.value).subscribe(res=>{\n        if (res) {\n          this.dialogRef.close(true);\n        }\n      },\n      err=>{\n        this.snapBar.open('erorr in server','',{duration:2000})\n      })\n    }\n    else\n    this.snapBar.open('One or more of the fields is invalid!','',{duration:2000})\n  }\n\n}\n","<h2 mat-mat-dialog-title>Add task</h2>\n<mat-dialog-content>\n    <form [formGroup]=\"newUserForm\"  (ngSubmit)=\"onSubmit()\">\n        <div style=\"display: flex; flex-direction: column;\">\n            \n            <div class=\"from-inline\">\n                <i class=\"far fa-user pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Name\n                    </mat-label>\n                    <input matInput formControlName=\"name\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"from-inline\">\n                <i class=\"las la-phone-volume pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Family\n                    </mat-label>\n                    <input matInput formControlName=\"family\">\n                </mat-form-field>\n            </div>\n            \n            <div class=\"from-inline\">\n                <i class=\"las la-key pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Password\n                    </mat-label>\n                    <input matInput formControlName=\"password\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"from-inline\">\n                <i class=\"las la-at pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Email\n                    </mat-label>\n                    <input matInput formControlName=\"mail\">\n                </mat-form-field>\n            </div>\n\n\n        </div>\n\n        <button mat-raised-button color=\"primary\" type=\"submit\">Sing in</button>\n    </form>\n</mat-dialog-content>\n\n","import { NgModule } from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\nconst mat=[\n  MatCardModule,\n    MatButtonModule,\n    MatInputModule,\n    MatGridListModule,\n    MatTableModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSnackBarModule,\n    MatToolbarModule\n\n]\n\n@NgModule({\n  imports: [mat],\n  exports:[mat]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  getFundUser(user){\n    \n  return this.http.post(\"/api/fund_user\",user)\n  }\n\n  getTask(){\n    \n  return this.http.get('/api/all_task')\n  }\n\n  addTask(newTask){\n    return this.http.post('/api/add_new_task',newTask)\n  }\n\n  editTask(upTask){\n    return this.http.post('/api/update_task',upTask)\n  }\n\n  remTask(idTask){\n    return this.http.delete(`/api/delet_task?id_task=${idTask}`)\n  }\n\n  logout(){\n    return this.http.get('/api/isLogout')\n  }\n\n  addUser(user){\n    return this.http.post('/api/add_user',user)\n  }\n\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}