{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/dialog-edit/dialog-edit.component.ts","./src/app/component/dialog-edit/dialog-edit.component.html","./src/app/component/dialog-new/dialog-new.component.ts","./src/app/component/dialog-new/dialog-new.component.html","./src/app/component/dialog-see/dialog-see.component.ts","./src/app/component/dialog-see/dialog-see.component.html","./src/app/component/home/home.component.ts","./src/app/component/home/home.component.html","./src/app/component/tasks/tasks.component.ts","./src/app/component/tasks/tasks.component.html","./src/app/component/user/user.component.ts","./src/app/component/user/user.component.html","./src/app/material/material.module.ts","./src/app/service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { TasksComponent } from './component/tasks/tasks.component';\n\nconst routes: Routes = [\n  {path: '',  redirectTo: 'home',pathMatch: 'full'},\n  {path:'home',component:HomeComponent},\n  {path:'task',component:TasksComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'propit';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { TasksComponent } from './component/tasks/tasks.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MaterialModule} from './material/material.module';\nimport { DialogNewComponent } from './component/dialog-new/dialog-new.component';\nimport { DialogEditComponent } from './component/dialog-edit/dialog-edit.component';\nimport { DialogSeeComponent } from './component/dialog-see/dialog-see.component';\nimport { UserComponent } from './component/user/user.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    TasksComponent,\n    DialogNewComponent,\n    DialogEditComponent,\n    DialogSeeComponent,\n    UserComponent\n  ],\n  entryComponents : [\n    DialogNewComponent,\n    DialogEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, inject, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ServiceService } from '../../service.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-dialog-edit',\n  templateUrl: './dialog-edit.component.html',\n  styleUrls: ['./dialog-edit.component.css']\n})\nexport class DialogEditComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private sevice: ServiceService, private dialogRef: MatDialogRef<DialogEditComponent>,\n  private snapBar:MatSnackBar) { }\n\n  // todo valide\n  editTaskForm = new FormGroup({\n    name: new FormControl(this.data.name,[Validators.required]),\n    mail: new FormControl(this.data.mail,[Validators.required,Validators.email]),\n    phone: new FormControl(this.data.phone,[Validators.required, Validators.pattern('^\\\\d*$'),Validators.maxLength(10)]),\n    content: new FormControl(this.data.content,[Validators.required])\n    // id_task: new FormControl(this.data.id_task),\n    // active: new FormControl(this.data.active)\n  });\n\n\n\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    \n\n    if ((this.data.name!=this.editTaskForm.value.name \n      || this.data.mail!=this.editTaskForm.value.mail\n      || this.data.phone!=this.editTaskForm.value.phone\n      || this.data.content!=this.editTaskForm.value.content)\n      && this.editTaskForm.valid) \n    {\n      console.log(this.editTaskForm.valid)\n      let testEdit=this.editTaskForm.value\n      \n      testEdit.id_task=this.data.id_task\n      testEdit.active=this.data.active\n      this.sevice.editTask(testEdit).subscribe(res=>{\n        if (res)\n        this.dialogRef.close(true)\n      }),err=>{console.log('erorr in sql server')}\n    }\n    else\n    this.snapBar.open('One or more of the fields is invalid!','',{duration:2000})\n\n  }\n\n}\n","<h2 mat-mat-dialog-title>Add task</h2>\n<mat-dialog-content class=\"m-1\">\n    <form [formGroup]=\"editTaskForm\" (ngSubmit)=\"onSubmit()\">\n        <div style=\"display: flex; flex-direction: column;\">\n            \n            <div class=\"from-inline\">\n                <i class=\"far fa-user pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Name\n                    </mat-label>\n                    <input matInput formControlName=\"name\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"from-inline\">\n                <i class=\"las la-at pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Email\n                    </mat-label>\n                    <input matInput formControlName=\"mail\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"from-inline\">\n                <i class=\"las la-phone-volume pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Phone\n                    </mat-label>\n                    <input matInput formControlName=\"phone\">\n                </mat-form-field>\n            </div>\n\n            <mat-form-field>\n                <mat-label>\n                    Description\n                </mat-label>\n                <textarea rows=\"6\" matInput placeholder=\"Ex. It makes me feel...\" formControlName=\"content\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <button mat-raised-button color=\"primary\" type=\"submit\">Update</button>\n    </form>\n</mat-dialog-content>","import { Component, OnInit } from '@angular/core';\nimport { ServiceService } from '../../service.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-dialog-new',\n  templateUrl: './dialog-new.component.html',\n  styleUrls: ['./dialog-new.component.css']\n})\nexport class DialogNewComponent implements OnInit {\n\n  constructor(private dialogRef:MatDialogRef<DialogNewComponent>,private service :ServiceService,\n    private snapBar:MatSnackBar) { }\n\n  newTaskForm = new FormGroup({\n    name: new FormControl('',[Validators.required]),\n    mail: new FormControl('',[Validators.required,Validators.email]),\n    phone: new FormControl('',[Validators.required,Validators.maxLength(10)]),\n    content: new FormControl('',[Validators.required])\n  });\n\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    \n    if (this.newTaskForm.valid)\n    {\n       this.service.addTask(this.newTaskForm.value).subscribe(res=>{\n         if (res) \n         this.dialogRef.close(true);\n       \n       })  \n    }\n    else{\n      this.snapBar.open('One or more of the fields is invalid!','',{duration:2000})\n    }\n  }\n}\n","<h2 mat-mat-dialog-title>Add task</h2>\n<mat-dialog-content>\n    <form [formGroup]=\"newTaskForm\"  (ngSubmit)=\"onSubmit()\">\n        <div style=\"display: flex; flex-direction: column;\">\n            \n            <div class=\"from-inline\">\n                <i class=\"far fa-user pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Name\n                    </mat-label>\n                    <input matInput formControlName=\"name\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"from-inline\">\n                <i class=\"las la-at pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Email\n                    </mat-label>\n                    <input matInput formControlName=\"mail\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"from-inline\">\n                <i class=\"las la-phone-volume pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Phone\n                    </mat-label>\n                    <input matInput formControlName=\"phone\">\n                </mat-form-field>\n            </div>\n\n            <mat-form-field>\n                <mat-label>\n                    Description\n                </mat-label>\n                <textarea rows=\"6\" matInput placeholder=\"Ex. It makes me feel...\" formControlName=\"content\"></textarea>\n            </mat-form-field>\n        </div>\n\n        <button mat-raised-button color=\"primary\" type=\"submit\">submit</button>\n    </form>\n\n\n\n</mat-dialog-content>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\n\n@Component({\n  selector: 'app-dialog-see',\n  templateUrl: './dialog-see.component.html',\n  styleUrls: ['./dialog-see.component.css']\n})\nexport class DialogSeeComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,  private dialogRef: MatDialogRef<DialogSeeComponent >) { }\n\n  ngOnInit(): void {\n  }\n\n  parsDate(date){\n    let word = date.split('T')[0].split('-');\n    \n    return `${word[2]}/${word[1]}/${word[0]}`\n \n  }\n\n}\n","<div style=\"max-width: 400px;\">\n\n\n    <h2 mat-dialog-title>\n        Task\n    </h2>\n    <mat-dialog-content>\n        <div class=\"px-4\">\n            <div class=\"pt-3\" style=\"display: flex; justify-content: space-between\">\n                <div>\n                    <i class=\"far fa-user pr-2\" style=\"font-size: medium;\"></i>\n                    {{data.name}}\n                </div>\n                <div>\n                    <i class=\"las la-phone-volume pr-2\" style=\"font-size: medium;\"></i>\n                    0{{data.phone}}\n                </div>\n            </div>\n            <div class=\"pt-3\" style=\"display: flex; justify-content: space-between;\">\n                <div>\n                    <i class=\"lar la-calendar pr-2\" style=\"font-size: medium;\"></i>\n                    {{parsDate(data.data)}}\n                </div>\n                <div>\n                    <i class=\"las la-at pr-2\" style=\"font-size: medium;\"></i>\n                    {{data.mail}}\n                </div>\n\n            </div>\n            <div class=\"pt-5\">\n\n                <h4>Description</h4>\n                {{data.content}}\n            </div>\n\n        </div>\n\n    </mat-dialog-content>\n    <mat-dialog-actions class=\"mt-3 mb-1\">\n        <button mat-dialog-close mat-mini-fab color=\"primary\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n    </mat-dialog-actions>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ServiceService } from '../../service.service';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport {UserComponent} from '../user/user.component'\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  userForm = new FormGroup({\n    password: new FormControl('',[Validators.required]),\n    email: new FormControl('',[Validators.required]),\n  });\n\n  constructor(private service: ServiceService, private router: Router,private dialog: MatDialog,private snapBar:MatSnackBar) { }\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    console.log(this.userForm.value);\n\n    if (this.userForm.valid)\n     {\n       this.service.getFundUser(this.userForm.value).subscribe(res => {\n           // TODO protect this\n           this.router.navigate(['task'])},err => this.snapBar.open('One or more of the fields is invalid','',{duration:2000}))\n    }\n    else\n    this.snapBar.open('Missing fields required','',{duration:2000});\n  }\n\n  addUser(){\n    this.dialog.open(UserComponent)\n  }\n}\n","<div class=\"cont\">\n    <mat-card class=\"login p-4\">\n        <mat-card-title class=\"mb-4\">\n            Log in\n        </mat-card-title>\n        <mat-card-content>\n            <div style=\"display: flex; justify-content: center;\">\n                <i class=\"fas fa-user-circle text-center\" style=\"font-size: xxx-large;\"></i>\n            </div>\n\n            <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n                <div style=\"display: flex; flex-direction: column;\" class=\"px-3\">\n                    <mat-form-field>\n                        <mat-label>\n                            Email\n                        </mat-label>\n                        <input matInput formControlName=\"email\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>\n                            Pssword\n                        </mat-label>\n                        <input matInput formControlName=\"password\">\n                    </mat-form-field>\n                    <button style=\"align-self: center;\" class=\"mt-3\" mat-raised-button color=\"primary\"\n                        style=\"font-size: medium;\" type=\"submit\">\n                        Login <i class=\"pl-1 las la-sign-in-alt\" style=\"font-size: x-large;\"></i></button>\n                </div>\n            </form>\n            \n            <div style=\"display: flex; justify-content: center;\" class=\"mt-3\">\n                <button mat-raised-button color=\"primary\" style=\"font-size: medium;\" (click)=\"addUser()\">\n                    \n                    <i class=\"las la-plus-circle\" style=\"font-size: x-large;\"></i> New User\n                </button>\n            </div>\n\n        </mat-card-content>\n    </mat-card>\n</div>","import { Component, OnInit,ViewChild, ChangeDetectorRef, QueryList, ViewChildren } from '@angular/core';\nimport { ServiceService } from '../../service.service';\nimport { Observable } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog} from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { DialogNewComponent } from '../dialog-new/dialog-new.component';\nimport { DialogEditComponent } from '../dialog-edit/dialog-edit.component';\nimport { DialogSeeComponent } from '../dialog-see/dialog-see.component';\nimport { Router } from '@angular/router';\n\nexport interface PeriodicElement {\n  name: string;\n  mail: string;\n  phone: number;\n  data: string;\n  content: string;\n  active: string;\n  id_task: string;\n}\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\n\n\n\nexport class TasksComponent implements OnInit {\n\n  TASKS: PeriodicElement[] = [];\n  response: any;\n  displayedColumnsSm: string[] = ['Name', 'Email','Options'];\n  displayedColumns: string[] = ['Name', 'Email', 'Phone', 'Data','Options'];\n  dataSource\n  dataSourceSm\n\n  @ViewChildren(MatPaginator) paginator = new QueryList<MatPaginator>();\n\n  constructor(private service: ServiceService, private dialog: MatDialog, private routr:Router) {}\n\n  ngOnInit(): void {\n    \n    this.dataSource = new MatTableDataSource();\n    this.getTask()\n    \n  }\n\n  getTask() {\n\n    this.service.getTask().subscribe(res => {\n\n      this.response=res\n\n      this.TASKS=[]\n      \n      this.response.forEach(item => {\n\n        this.TASKS.push({\n          name: item.name,\n          mail: item.mail,\n          phone: item.phone,\n          data: item.creattion_date,\n          content: item.content,\n          active: item.active,\n          id_task: item.id_task\n        })\n      })\n      this.dataSource = new MatTableDataSource(this.TASKS)\n      this.dataSourceSm = new MatTableDataSource(this.TASKS)\n      this.dataSource.paginator=this.paginator.toArray()[0]\n      this.dataSourceSm.paginator=this.paginator.toArray()[1]\n      \n    })\n  }\n\n  applyFilter(valueFilter: string) {\n    this.dataSource.filter = valueFilter.trim().toLowerCase()\n  }\n\n\n\n  addTask() {\n\n\n    \n    let dialogRef = this.dialog.open(DialogNewComponent)\n    \n    dialogRef.afterClosed().subscribe(res=>{\n      if (res)\n      this.getTask()\n    })\n    \n  }\n  watching(task) {\n    this.dialog.open(DialogSeeComponent, { data: task })\n  }\n\n  remove(idTask) \n  {\n    this.service.remTask(idTask).subscribe(res=>{\n      if (res)\n      this.getTask()\n    },\n    err=>console.log(err))\n  }\n\n  edit(task) {\n\n  \n    let dialogRef= this.dialog.open(DialogEditComponent, { data: task })\n\n    dialogRef.afterClosed().subscribe(res=>{\n      if (res)\n      this.getTask()\n    })\n  }\n\n  parsDare(date){\n    let word = date.split('T')[0].split('-');\n    \n    return `${word[2]}/${word[1]}/${word[0]}`\n    \n    \n  }\n  logout(){\n    this.service.logout().subscribe(res=>{\n      console.log(res)\n      res ? this.routr.navigate(['home']) : ''\n    })\n  }\n\n}\n\n","<div class=\"bg\">\n<mat-toolbar style=\"justify-content: space-between;\" color=\"primary\">\n  <div class=\"d-none d-sm-block\">\n    <button mat-raised-button (click)=\"addTask()\">\n      <i class=\"las la-plus\" style=\"font-size: medium;\"></i> New Task\n    </button>\n  </div>\n  <div class=\"d-block d-sm-none\">\n    <mat-menu #MatMenu=\"matMenu\">\n      <button mat-menu-item (click)=\"addTask()\">\n        <i class=\"las la-plus\" style=\"font-size: medium;\"></i> New Task\n      </button>\n    </mat-menu>\n    <div >\n      <button mat-raised-button [matMenuTriggerFor]=\"MatMenu\">\n        <i class=\"fas fa-ellipsis-v\" style=\"font-size: medium;\"></i>\n      </button>\n    </div>\n  </div>\n\n  <div>\n    <span class=\"h6\" (click)=\"logout()\" style=\"cursor: pointer;\"> Log out <i class=\"las la-sign-out-alt\" style=\"font-size: x-large;\"></i></span>\n  </div>\n</mat-toolbar>\n\n<div class=\"mt-4 ml-5 form-inline\" >\n  \n  <i class=\"las la-search pr-3\" style=\"font-size: x-large;\"></i>\n  <mat-form-field>\n    <input matInput placeholder=\"Filter\" (keyup)=\"applyFilter($event.target.value)\">\n  </mat-form-field>\n</div>\n\n<div class=\"d-none d-sm-block\">\n  <div class=\"mat-elevation-z8 mx-5\">\n    <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 bg-t text-white\">\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"Name\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"><i class=\"far fa-user pr-2\" style=\"font-size: medium;\"></i> Name\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" class=\"text-white\">{{element.name}} </mat-cell>\n      </ng-container>\n\n      <!-- Email Column -->\n      <ng-container matColumnDef=\"Email\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"> <i class=\"las la-at pr-2\" style=\"font-size: medium;\"></i> Email\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" class=\"text-white\"> {{element.mail}} </mat-cell>\n      </ng-container>\n\n      <!-- Phone Column -->\n      <ng-container matColumnDef=\"Phone\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"><i class=\"las la-phone-volume pr-2\" style=\"font-size: medium;\"></i> Phone\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" class=\"text-white\"> 0{{element.phone}} </mat-cell>\n      </ng-container>\n\n      <!-- Data Column -->\n      <ng-container matColumnDef=\"Data\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"> <i class=\"lar la-calendar pr-2\" style=\"font-size: medium;\"></i> Data\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" class=\"text-white\"> {{parsDare(element.data)}} </mat-cell>\n      </ng-container>\n\n      <!-- Options Column -->\n\n      <ng-container matColumnDef=\"Options\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"> Options </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <span class=\"d-none d-lg-block\">\n            <button (click)=\"edit(element)\" class=\"btn btn-primary mr-2 ml-1\"><i\n                class=\"las la-pen\"></i></button>\n            <button (click)=\"watching(element)\" class=\"btn btn-success\"><i class=\"las la-eye\"></i></button>\n            <button (click)=\"remove(element.id_task)\" class=\"btn btn-danger ml-2\"><i\n                class=\"las la-trash-alt\"></i></button>\n          </span>\n          <span class=\"d-block d-lg-none\">\n\n            <mat-menu #MatMenuModule=\"matMenu\">\n              <div mat-menu-item (click)=\"edit(element)\">\n                <i class=\"las la-pen\"></i> edit\n              </div>\n              <div mat-menu-item (click)=\"watching(element)\">\n                <i class=\"las la-eye\"></i> Watching\n              </div>\n              <div mat-menu-item (click)=\"remove(element.id_task)\">\n                <i class=\"las la-trash-alt\"></i> Remove\n              </div>\n            </mat-menu>\n            <div class=\"p-3\">\n              <button color=\"primary\" mat-mini-fab [matMenuTriggerFor]=\"MatMenuModule\">\n                <i class=\"las la-bars\"></i>\n              </button>\n            </div>\n\n          </span>\n\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n    <mat-paginator class=\"text-white\" style=\"background-color:  rgb(115, 136, 255,0.3);\" [pageSizeOptions]=[2,5,10,20] showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n\n\n<span class=\"d-block d-sm-none\">\n  <div class=\"mat-elevation-z8 mx-3\">\n    <mat-table [dataSource]=\"dataSourceSm\" class=\"mat-elevation-z8 bg-t\">\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"Name\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"><i class=\"far fa-user pr-2\" style=\"font-size: medium;\"></i> Name\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" class=\"text-white\"> {{element.name}} </mat-cell>\n      </ng-container>\n\n      <!-- Email Column -->\n      <ng-container matColumnDef=\"Email\">\n        <mat-header-cell *matHeaderCellDef class=\"text-white\"> <i class=\"las la-at pr-2\" style=\"font-size: medium;\"></i> Email\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" class=\"text-white\"> {{element.mail}} </mat-cell>\n      </ng-container>\n\n      <!-- Options Column -->\n\n      <ng-container matColumnDef=\"Options\">\n        <mat-header-cell *matHeaderCellDef class=\"ml-5 pl-4\" class=\"text-white\"> Options </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <span class=\"d-block d-lg-none\">\n\n            <mat-menu #MatMenuModule=\"matMenu\">\n              <div mat-menu-item (click)=\"edit(element)\">\n                <i class=\"las la-pen\"></i> edit\n              </div>\n              <div mat-menu-item (click)=\"watching(element)\">\n                <i class=\"las la-eye\"></i> Watching\n              </div>\n              <div mat-menu-item (click)=\"remove(element.id_task)\">\n                <i class=\"las la-trash-alt\"></i> Remove\n              </div>\n            </mat-menu>\n            <div class=\"ml-4 my-2\">\n              <button color=\"primary\" mat-mini-fab [matMenuTriggerFor]=\"MatMenuModule\">\n                <i class=\"las la-bars\"></i>\n              </button>\n            </div>\n\n          </span>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumnsSm\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumnsSm;\"></mat-row>\n    </mat-table>\n    <mat-paginator class=\"text-white\" style=\"background-color:  rgb(115, 136, 255,0.3);\" [pageSizeOptions]=[2,5,10,20] showFirstLastButtons></mat-paginator>\n  </div>\n</span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ServiceService } from '../../service.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private servis:ServiceService,private snapBar:MatSnackBar,private dialogRef:MatDialogRef<UserComponent>) { }\n\n  newUserForm = new FormGroup({\n    name: new FormControl('',[Validators.required]),\n    mail: new FormControl('',[Validators.required,Validators.email]),\n    password: new FormControl('',[Validators.required,Validators.maxLength(6)]),\n    family: new FormControl('',[Validators.required])\n  });\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    if (this.newUserForm.valid)\n    {\n      this.servis.addUser(this.newUserForm.value).subscribe(res=>{\n        if (res) {\n          this.dialogRef.close(true);\n        }\n      },\n      err=>{\n        this.snapBar.open('erorr in server','',{duration:2000})\n      })\n    }\n    else\n    this.snapBar.open('One or more of the fields is invalid!','',{duration:2000})\n  }\n\n}\n","<h2 mat-mat-dialog-title>Add task</h2>\n<mat-dialog-content>\n    <form [formGroup]=\"newUserForm\"  (ngSubmit)=\"onSubmit()\">\n        <div style=\"display: flex; flex-direction: column;\">\n            \n            <div class=\"from-inline\">\n                <i class=\"far fa-user pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Name\n                    </mat-label>\n                    <input matInput formControlName=\"name\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"from-inline\">\n                <i class=\"las la-phone-volume pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Family\n                    </mat-label>\n                    <input matInput formControlName=\"family\">\n                </mat-form-field>\n            </div>\n            \n            <div class=\"from-inline\">\n                <i class=\"las la-key pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Password\n                    </mat-label>\n                    <input matInput formControlName=\"password\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"from-inline\">\n                <i class=\"las la-at pr-2\" style=\"font-size: medium;\"></i>\n                <mat-form-field>\n                    <mat-label>\n                        Email\n                    </mat-label>\n                    <input matInput formControlName=\"mail\">\n                </mat-form-field>\n            </div>\n\n\n        </div>\n\n        <button mat-raised-button color=\"primary\" type=\"submit\">Sing in</button>\n    </form>\n</mat-dialog-content>\n\n","import { NgModule } from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\nconst mat=[\n  MatCardModule,\n    MatButtonModule,\n    MatInputModule,\n    MatGridListModule,\n    MatTableModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSnackBarModule,\n    MatToolbarModule\n\n]\n\n@NgModule({\n  imports: [mat],\n  exports:[mat]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  getFundUser(user){\n    \n  return this.http.post(\"/api/fund_user\",user)\n  }\n\n  getTask(){\n    \n  return this.http.get('/api/all_task')\n  }\n\n  addTask(newTask){\n    return this.http.post('/api/add_new_task',newTask)\n  }\n\n  editTask(upTask){\n    return this.http.post('/api/update_task',upTask)\n  }\n\n  remTask(idTask){\n    return this.http.delete(`/api/delet_task?id_task=${idTask}`)\n  }\n\n  logout(){\n    return this.http.get('/api/isLogout')\n  }\n\n  addUser(user){\n    return this.http.post('/api/add_user',user)\n  }\n\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}